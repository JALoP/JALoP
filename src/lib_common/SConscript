Import('*')

lib_common_env = env.Clone()
lib_common_env.MergeFlags({'CPPPATH':['#src/lib_common/include', '#src/lib_common/src']})
lib_common_env.MergeFlags(env['lfs_cflags'])
lib_common_env.MergeFlags(env['openssl_cflags'])
lib_common_env.MergeFlags(env['openssl_ldflags'])
lib_common_env.MergeFlags(env['xerces_cflags'])

lib_common_env.MergeFlags(env['xerces_ldflags'])
lib_common_env.MergeFlags(env['libuuid_ldflags'])
lib_common_env.MergeFlags(env['santuario_ldflags'])

lib_common_env.MergeFlags(env['libxml2_cflags'])
lib_common_env.MergeFlags(env['libxml2_ldflags'])

lib_common_env.MergeFlags(env['xmlsec1_cflags'])
lib_common_env.MergeFlags(env['xmlsec1_ldflags'])

lib_common_env.MergeFlags(env['xmlsec1_openssl_cflags'])
lib_common_env.MergeFlags(env['xmlsec1_openssl_ldflags'])

SConscript('include/SConscript', exports={'env':lib_common_env})
lib_common = SConscript('src/SConscript', exports={'env':lib_common_env})
SConscript('test/SConscript', exports={'env':lib_common_env, 'all_tests':all_tests, 'test_utils':test_utils})
Return("lib_common")
