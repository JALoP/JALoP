import os
from Utils import recursive_glob, add_project_lib

Import('*')

env = env.Clone()

env.MergeFlags(env["libuuid_ldflags"]);
env.MergeFlags(env['lfs_cflags'])
env.MergeFlags(env['libconfig_cflags'])
env.MergeFlags(env['libconfig_ldflags'])
env.PrependENVPath('LD_LIBRARY_PATH', os.path.dirname(str(lib_common[0])))

add_project_lib(env, 'lib_common', 'jal-common')
add_project_lib(env, 'jal_utils', 'jal-utils')

jalp_test = env.SConscript('jalp_test/SConscript', exports='env all_tests lib_common producer_lib')
jalp_dump = env.SConscript('jal_dump/SConscript', exports='env all_tests lib_common db_layer')
jal_purge = env.SConscript('jal_purge/SConscript', exports='env all_tests lib_common db_layer')
testserver = env.SConscript('testserver/SConscript', exports='env all_tests lib_common')
testpush = env.SConscript('testpush/SConscript', exports='env lib_common network_lib')
dummy_net_server = env.SConscript('dummy_net_server/SConscript', exports='env lib_common network_lib')
testsub = env.SConscript('testsub/SConscript', exports='env lib_common network_lib')
jaldb_tail = env.SConscript('jaldb_tail/SConscript', exports='env all_tests lib_common db_layer')

Return("jalp_test")
