import os
import string
Import('*')

tests = []

lib_env = env
env = env.Clone()

# The test code triggers warnings we'd just as soon ignore
ccflags = ' -Wno-format-nonliteral -Wno-unreachable-code -DSCHEMAS_ROOT=\\"' + lib_env['SOURCE_ROOT'] + '/schemas/\\" -DTEST_INPUT_ROOT=\\"' + lib_env['SOURCE_ROOT'] + '/test-input/\\" '

env.Append(CCFLAGS=ccflags.split())
env.MergeFlags({'CPPPATH':'#src/network_stores/src:#src/lib_common/src:#src/test_utils/src'.split(':')})

parse_obj = lib_env.SharedObject("../src/jsub_parse.cpp")
db_layer_obj = lib_env.SharedObject("../src/jsub_db_layer.cpp")

tests.append(env.TestDeptTest('test_jsub_db_layer.cpp',
	other_sources=[lib_common, parse_obj, db_layer, jal_utils, network_lib])[0].abspath)

tests.append(env.TestDeptTest('test_jsub_parse.cpp',
	other_sources=[lib_common, db_layer_obj, db_layer, jal_utils, network_lib])[0].abspath)

net_store_tests = env.Alias('net_store_tests', tests, 'test_dept ' + " ".join(tests))

AlwaysBuild(net_store_tests)

env.Depends(all_tests, net_store_tests)
