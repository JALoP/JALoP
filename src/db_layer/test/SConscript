import os
import string
Import('*')

tests = []

env = env.Clone()
# The test-dept macros trigger this warning, so disable it for all the test
# drivers.
env.Append(CPPPATH='#/src/test_utils/src')
ccflags = ' -Wno-format-nonliteral -Wno-unreachable-code -DSCHEMAS_ROOT=\\"' + env['SOURCE_ROOT'] + '/schemas/\\" -DTEST_INPUT_ROOT=\\"' + env['SOURCE_ROOT'] + '/test-input/\\" '
env.Append(CCFLAGS=ccflags.split())
env.Append(RPATH=os.path.dirname(str(lib_common[0])))
env.MergeFlags(env['bdb_ldflags'])

contextObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_context.cpp'))
datetimeObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_datetime.c'))
recordDbsObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_record_dbs.c'))
recordObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_record.c'))
recordUuidObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_record_uuid.c'))
recordXmlObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_record_xml.c'))
segmentObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_segment.c'))
serialIdObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_serial_id.c'))
serializeRecordObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_serialize_record.c'))
traversObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_traverse.cpp'))
utilsObj = db_env.SharedObject(os.path.join('..', 'src', 'jaldb_utils.c'))

tests.append(env.TestDeptTest('test_jaldb_context.cpp',
	other_sources=[datetimeObj, lib_common, recordObj, recordDbsObj, recordUuidObj, recordXmlObj, serialIdObj, serializeRecordObj, segmentObj, test_utils, utilsObj])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_datetime.c',
	other_sources=[lib_common], useProxies=True)[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_purge.cpp',
	other_sources=[contextObj, datetimeObj, lib_common, recordObj, recordDbsObj, recordUuidObj, recordXmlObj, serialIdObj, serializeRecordObj, segmentObj, test_utils, utilsObj])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_record.c',
	other_sources=[lib_common, segmentObj])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_record_dbs.c',
	other_sources=[datetimeObj, lib_common, recordUuidObj, serialIdObj], useProxies=True)[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_record_uuid.c',
	other_sources=[lib_common])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_record_xml.c',
	other_sources=[lib_common, recordObj, segmentObj, test_utils])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_segment.c',
	other_sources=[lib_common], useProxies=True)[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_serial_id.c',
	other_sources=[lib_common])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_serialize_record.c',
	other_sources=[lib_common, recordObj, segmentObj])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_traverse.cpp', other_sources=[lib_common, contextObj, datetimeObj, recordObj, recordDbsObj, recordUuidObj, recordXmlObj, serialIdObj, serializeRecordObj, segmentObj, test_utils, utilsObj])[0].abspath)
tests.append(env.TestDeptTest('test_jaldb_utils.c',
	other_sources=[lib_common, test_utils], useProxies=True)[0].abspath)

db_tests = env.Alias('db_tests', tests, 'test_dept ' + " ".join(tests))
AlwaysBuild(db_tests)
env.Depends(all_tests, db_tests)
