Import('*')
env = env.Clone()

env.MergeFlags(env['lfs_cflags'])
env.MergeFlags(env['openssl_cflags'])
env.MergeFlags(env['libxml2_cflags'])
env.MergeFlags(env['xmlsec1_cflags'])
env.MergeFlags(env['xmlsec1_openssl_cflags'])
env.MergeFlags(env['openssl_ldflags'])
env.MergeFlags(env['libxml2_ldflags'])
env.MergeFlags(env['xmlsec1_ldflags'])
env.MergeFlags(env['xmlsec1_openssl_ldflags'])
env.MergeFlags(env['libuuid_ldflags'])
env.MergeFlags({'CXXFLAGS':['-D__STDC_FORMAT_MACROS']})
env.MergeFlags({'CPPPATH':['#src/producer_lib/include', '#src/lib_common/include', '#src/producer_lib/src', '#src/lib_common/src', '../src']})

producer_lib, producer_env = SConscript('src/SConscript', exports="env")
SConscript('test/SConscript', exports="env producer_env all_tests lib_common test_utils")
SConscript('include/SConscript', exports="env all_tests lib_common")
Return("producer_lib")
