import os
import string
Import('*')

tests = []

lib_env = env
env = env.Clone()

# The test code trigger warnings we'd just assume ignore.
ccflags = ' -Wno-format-nonliteral -Wno-unreachable-code '
env.Append(CCFLAGS=ccflags.split())

sub_cb_obj = lib_env.SharedObject("../src/jaln_subscriber_callbacks.c")
pub_cb_obj = lib_env.SharedObject("../src/jaln_publisher_callbacks.c")
conn_cb_obj = lib_env.SharedObject("../src/jaln_connection_callbacks.c")
ctx_obj = lib_env.SharedObject("../src/jaln_context.c")

tests.append(env.TestDeptTest('test_jaln_publisher_callbacks.c',
	other_sources=[lib_common])[0].abspath)
tests.append(env.TestDeptTest('test_jaln_connection_callbacks.c',
	other_sources=[lib_common])[0].abspath)
tests.append(env.TestDeptTest('test_jaln_subscriber_callbacks.c',
	other_sources=[lib_common, ctx_obj, pub_cb_obj, conn_cb_obj])[0].abspath)
tests.append(env.TestDeptTest('test_jaln_context.c',
	other_sources=[lib_common, sub_cb_obj, pub_cb_obj, conn_cb_obj])[0].abspath)

net_lib_tests = env.Alias('net_lib_tests', tests, 'test_dept ' + " ".join(tests))
AlwaysBuild(net_lib_tests)
env.Depends(all_tests, net_lib_tests)

