# the path to the private key, used for TLS negotiation
private_key = "/etc/jalop/TLS_CA_Signed/client/jal_publisher_v2_client.key.pem";

# the path to the public cert, used for TLS negotiation
public_cert = "/etc/jalop/TLS_CA_Signed/client/jal_publisher_v2_client.cert.pem";

# UUID used to identify this publisher
publisher_id = "cc0191c2-97e8-4cbf-af13-920d268d68ec";

# time in seconds between checks for new records when none are available
poll_time = 1L;

# time in seconds between attempts to reconnect to peers where the connection has closed
# the special value of -1 can be used to indicated that jald should not attempt reconnects
retry_interval = 30L;

# Network timeout for each session, in minutes. Upon failure to send or receive
# data in this time, a network outage is assumed and the session closes.
# The special value of 0 implies not network timeout is enforced.
network_timeout = 60;

# path to the root of the database (optional)
db_root = "/var/log/jalop";

# path to a directory containing the JALoP schemas (optional)
schemas_root = "/etc/jalop/schemas/";

# file storing PID of jald when daemonized.
#pid_file = "/var/log/jalop/jald-pid.txt";

# Log directory of jald when daemonized.
#log_dir = "/var/log/jalop/log/";

# List of subscriber configurations.
peers = ( {
	# the hostname or IP address of the subscriber
	host = "192.168.59.136";
	# the port to connect to
	port = 8444L;
	# the mode of JALoP operation
	mode = "archive";
	# array of digest challenge configuration settings ordered by descending priority
	digest_challenge = ["on", "off"];
	# array of record types to be sent to the subscriber
	record_types = ["audit", "log", "journal"];
	# directory containing the CA certificate(s) to use for TLS negotiation
	# cert_dir = "/etc/jalop/TLS_CA_Signed/client/trust_store_dir";
	} );

