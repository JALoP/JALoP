<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://www.dod.mil/jalop-1.0/applicationMetadataTypes"
	xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:jamt="http://www.dod.mil/jalop-1.0/applicationMetadataTypes"
	xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
	elementFormDefault="qualified">
	<import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="./xmldsig-core-schema.xsd"/>
	<element name="ApplicationMetadata" type="jamt:ApplicationMetadataType"/>
	<complexType name="ApplicationMetadataType">
		<annotation><documentation>If the application adds a Signature element, it should also add a default namespace declaration to the node. This node must also contain namespace declarations for any namespaces included in the CanonicalizationMethod and Transform elements. This ensures that this document may be embedded into another document without breaking the signatures, regardless of how namespaces are declared elsewhere.</documentation></annotation>
		<sequence>
			<element name="EventID" type="string" minOccurs="0"><annotation><documentation>
				The eventID only has meaning to the application that generates the XML. The JALoP Stores do not interpret the EventID in any way.</documentation></annotation></element>
			<choice>
				<element ref="jamt:Syslog"/>
				<element ref="jamt:Logger"/>
				<element name="Custom" type="anyType">
					<annotation><documentation>The custom elment is intended for applications that are not satisfied with the restrictions of the syslog and logger elements. It's use is discouraged.</documentation></annotation>
				</element>
			</choice>
			<element ref="jamt:JournalMetadata" minOccurs="0"/>
			<element ref="ds:Signature" minOccurs="0">
				<annotation><documentation>Applications may include a Signature element to sign this document. The Signature is validated against the XML Digital signature schema (http://www.w3.org/2000/09/xmldsig#) and JALoP does not impose any restrictions or limits on what an application may do. However, for greater interoperability, applications are encouraged to follow the scheme that follows.
	The SignedInfo element must use the CanonicalizationMethod "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments". Because this canonicalization excludes all namespaces by default, applications must include an InclusiveNamespaces elment that lists the prefixes used within the SignedInfo elmenet. Any SignatureMethod, except those using SHA1 digests, may be used. The recommended SignatureMethod is "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256".
		The SignedInfo must contain a single Reference element. The Reference must have the URI "#xpointer(id('ID'))", where 'ID' is the JAL id of the ApplicationMetadata element. The reference element should have the following 2 transforms:
	The first transform must use the algorithm "http://www.w3.org/2000/09/xmldsig#enveloped-signature".
	The second transform must use the algorithm "http://www.w3.org/2001/10/xml-exc-c14n#WithComments". This transform must include an InclusiveNamespaces element with a PrefixList that contains every namespace prefix used in the document.
	Registered namespaces (including their prefixes) may be obtained with the XPath expression "//namespace::*" .
	Applications are encouraged, but not required to include the Signature element.</documentation></annotation>
			</element>
			<element ref="ds:Manifest" minOccurs="0">
				<annotation>
					<documentation>The manifest allows a place for applications to embed digests for the data they submit to the JALoP local store. The manifest should contain Reference elements for the payload (journal, audit or log data).

	The Reference element for the payload (journal, audit, or log data) must have the URI "jalop:paylod". Applications may use any digest method listed at  http://www.w3.org/TR/xmldsig-core1/#sec-AlgID except SHA1.
	If the payload is journal or log data, applications must not apply any transforms. If the payload is audit data, the application must use the canonicalization method "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments", and must not apply any additional transforms.

	Applications are encouraged, but not required to include this Manifest as is.</documentation></annotation>
			</element>
		</sequence>
		<attribute name="JID" type="ID" use="required">
			<annotation><documentation>An ID used when signing this document</documentation></annotation>
		</attribute>
	</complexType>

	<simpleType name="FacilityType">
		<restriction base="nonNegativeInteger">
			<maxInclusive value="23"/>
		</restriction>
	</simpleType>
	<simpleType name="SyslogSeverityType">
		<restriction base="nonNegativeInteger">
			<maxInclusive value="7"/>
		</restriction>
	</simpleType>
	<element name="StructuredData" type="jamt:StructuredDataType"/>
	<complexType name="StructuredDataType">
		<sequence>
			<element ref="jamt:Field" maxOccurs="unbounded"/>
		</sequence>
		<attribute name="SD_ID" type="string" use="required"/>
	</complexType>
	<element name="Field" type="jamt:MetadataType"/>
	<complexType name="MetadataType">
		<simpleContent>
			<extension base="string">
				<attribute name="Key" type="string" use="required"/>
			</extension>
		</simpleContent>
	</complexType>
	<element name="Severity" type="jamt:LoggerSeverityType"/>
	<complexType name="LoggerSeverityType">
		<simpleContent>
			<extension base="integer">
				<attribute name="Name" type="string"/>
			</extension>
		</simpleContent>
	</complexType>
	<element name="Syslog" type="jamt:SyslogType"/>
	<complexType name="SyslogType">
		<annotation><documentation>The syslogType is provided to convey datadescribed in section 6 of RFC5424 (syslog protocol).</documentation></annotation>
		<sequence>
			<element name="Entry" type="string" minOccurs="0">
				<annotation><documentation>The actual log entry</documentation></annotation>
			</element>
			<element ref="jamt:StructuredData" minOccurs="0" maxOccurs="unbounded"/>
		</sequence>
		<attribute name="Facility" type="jamt:FacilityType"/>
		<attribute name="Severity" type="jamt:SyslogSeverityType"/>
		<attribute name="Timestamp" type="dateTime"/>
		<attribute name="Hostname" type="string"/>
		<attribute name="ApplicationName" type="string"/>
		<attribute name="ProcessID" type="integer"/>
		<attribute name="MessageID" type="string">
			<annotation><documentation>The Message ID may be used to identify the type of log message. This corresponds to the "MSGID" field presented by syslog (RFC 5424) in section 6.2.7.</documentation></annotation>
		</attribute>
	</complexType>
	<element name="Logger" type="jamt:LoggerType"/>
	<complexType name="LoggerType">
		<annotation><documentation>The logger section is intended for use by application level loggers that communicate directly with JALoP.</documentation></annotation>
		<sequence>
			<element name="LoggerName" type="string" minOccurs="0"/>
			<element ref="jamt:Severity" minOccurs="0"/>
			<element name="Timestamp" type="dateTime" minOccurs="0"/>
			<element name="Hostname" type="string" minOccurs="0"/>
			<element name="ApplicationName" type="string" minOccurs="0"/>
			<element name="ProcessID" type="integer" minOccurs="0"/>
			<element name="ThreadID" type="string" minOccurs="0"/>
			<element name="Message" type="string" minOccurs="0"/>
			<element name="Location" minOccurs="0">
				<complexType>
					<sequence>
						<element ref="jamt:StackFrame" maxOccurs="unbounded"/>
					</sequence>
				</complexType>
			</element>
			<element name="NestedDiagnosticContext" minOccurs="0" type="string"/>
			<element name="MappedDiagnosticContext" minOccurs="0" type="string"/>
			<element ref="jamt:StructuredData" minOccurs="0" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<element name="StackFrame" type="jamt:StackFrameType"/>
	<complexType name="StackFrameType">
		<sequence>
			<element name="CallerName" type="string" minOccurs="0"/>
			<element name="FileName" type="string" minOccurs="0"/>
			<element name="LineNumber" type="positiveInteger" minOccurs="0"/>
			<element name="ClassName" type="string" minOccurs="0"/>
			<element name="MethodName" type="string" minOccurs="0"/>
		</sequence>
		<attribute name="Depth" type="nonNegativeInteger"/>
	</complexType>

	<simpleType name="MediaTypeType">
		<restriction base="string">
			<enumeration value="application"/>
			<enumeration value="audio"/>
			<enumeration value="example"/>
			<enumeration value="image"/>
			<enumeration value="message"/>
			<enumeration value="model"/>
			<enumeration value="text"/>
			<enumeration value="video"/>
		</restriction>
	</simpleType>

	<simpleType name="ThreatLevelType">
		<restriction base="string">
			<enumeration value="malicious">
				<annotation><documentation>Applications should set the threat level to malicious when the associated journal data is known to contain viruses, macros, or anything else deemed dangerous.</documentation></annotation>
			</enumeration>
			<enumeration value="unknown">
				<annotation><documentation>Applications should set the threat level to "unknown" when the application did not perform any sort of scan of the journal data. This is the default.</documentation></annotation>
			</enumeration>
			<enumeration value="safe">
				<annotation><documentation>Designates that the entity submitting this piece of data for journaling scanned the document for viruses, macros, etc. and deemed the file to be innocuous. Note that it is still possible for the journal data to contain malicious code that was not detected.</documentation></annotation>
			</enumeration>
		</restriction>
	</simpleType>
	<element name="Transforms" type="jamt:TransformsType"/>
	<complexType name="TransformsType">
		<annotation>
			<documentation>The transformsType is an ordered list of transforms the application applied to the journal data before submitting it to the local JAL handler. This may include compression algorithms, encryption, etc. Applications are recommended to encrypt potentially malicious data. The intent here is to prevent accidental execution of malicious code, not necessarily point to point security. It is recommended that applications utilize a simple XOR scheme, using the URI "http://www.dod.mil/algorithms/xor". Transforms may also include compression algorithms.

The transforms must be listed in reverse order. For example, if an application compressed a document, and then encrypted it, it must list the encryption first, followed by the compression algorithm. Because the transforms here are intended to prevent an end user from accidentally opening a file, applications are encouraged to include any key information required to reverse the encryption.

   XXX - should list a few 'supported' algorithms.</documentation></annotation>
		<sequence>
			<element ref="jamt:Transform" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<element name="Transform" type="jamt:TransformType"/>
	<complexType name="TransformType">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element ref="jamt:XOR"/>
			<element ref="jamt:AES128"/>
			<element ref="jamt:AES192"/>
			<element ref="jamt:AES256"/>
			<any namespace="##other" processContents="lax"/>
		</choice>
		<attribute name="Algorithm" type="anyURI" use="required"/>
	</complexType>
	<element name="XOR" type="jamt:xorECBType"/>
	<complexType name="xorECBType">
		<sequence>
			<element name="Key" type="jamt:Base64Binary4Bytes"/>
		</sequence>
	</complexType>
	<element name="AES128" type="jamt:AES128_CBC_Type"/>
	<complexType name="AES128_CBC_Type">
		<sequence>
			<element name="Key" type="jamt:Base64Binary16Bytes" minOccurs="0"/>
			<element name="IV" type="jamt:Base64Binary16Bytes" minOccurs="0"/>
		</sequence>
	</complexType>
	<element name="AES192" type="jamt:AES192_CBC_Type"/>
	<complexType name="AES192_CBC_Type">
		<sequence>
			<element name="Key" type="jamt:Base64Binary24Bytes" minOccurs="0"/>
			<element name="IV" type="jamt:Base64Binary16Bytes" minOccurs="0"/>
		</sequence>
	</complexType>
	<element name="AES256" type="jamt:AES256_CBC_Type"/>
	<complexType name="AES256_CBC_Type">
		<sequence>
			<element name="Key" type="jamt:Base64Binary32Bytes" minOccurs="0"/>
			<element name="IV" type="jamt:Base64Binary16Bytes" minOccurs="0"/>
		</sequence>
	</complexType>
	<simpleType name="Base64Binary16Bytes">
		<restriction base="base64Binary">
			<!--for base64Binary, length corresponds to the number of 8-bit bytes, not the number of characters -->
			<length value="16" fixed="true"/>
		</restriction>
	</simpleType>
	<simpleType name="Base64Binary24Bytes">
		<restriction base="base64Binary">
			<!--for base64Binary, length corresponds to the number of 8-bit bytes, not the number of characters -->
			<length value="24" fixed="true"/>
		</restriction>
	</simpleType>
	<simpleType name="Base64Binary32Bytes">
		<restriction base="base64Binary">
			<!--for base64Binary, length corresponds to the number of 8-bit bytes, not the number of characters -->
			<length value="32" fixed="true"/>
		</restriction>
	</simpleType>
	<simpleType name="Base64Binary4Bytes">
		<restriction base="base64Binary">
			<!--for base64Binary, length corresponds to the number of 8-bit bytes, not the number of characters -->
			<length value="4" fixed="true"/>
		</restriction>
	</simpleType>
	<element name="Parameter" type="jamt:ParameterType"/>
	<complexType name="ParameterType">
		<simpleContent>
			<extension base="string">
				<attribute name="Name" type="string" use="required"/>
			</extension>
		</simpleContent>
	</complexType>
	<element name="Content-Type" type="jamt:ContentTypeType"/>
	<complexType name="ContentTypeType">
		<annotation><documentation>The content type is modeled after the MIME content type and applications should
  follow the same guidelines as for MIME.</documentation></annotation>
		<sequence>
			<element ref="jamt:Parameter" minOccurs="0" maxOccurs="unbounded"/>
		</sequence>
		<attribute name="MediaType" type="jamt:MediaTypeType" use="required"/>
		<attribute name="SubType" type="string" use="required"/>
	</complexType>

	<element name="JournalMetadata" type="jamt:JournalMetadataType"/>
	<complexType name="JournalMetadataType">
		<annotation><documentation>The JournalMetadataType is primarily for Journal data.</documentation></annotation>
		<sequence>
			<element ref="jamt:FileInfo"/>
			<element ref="jamt:Transforms" minOccurs="0"/>
		</sequence>
	</complexType>
	<element name="FileInfo" type="jamt:FileInfoType"/>
	<complexType name="FileInfoType">
		<sequence>
			<element ref="jamt:Content-Type" minOccurs="0"/>
		</sequence>
		<attribute name="FileName" type="string" use="required"/>
		<attribute name="OriginalSize" type="nonNegativeInteger">
			<annotation><documentation>Indicates the size of the data before the application applied any transforms</documentation></annotation>
		</attribute>
		<attribute name="Size" type="nonNegativeInteger">
			<annotation><documentation>Indicates the size of the data as it was sent to JALoP, after the application performed any transforms</documentation></annotation>
		</attribute>
		<attribute name="ThreatLevel" type="jamt:ThreatLevelType" default="unknown"/>
	</complexType>
</schema>
