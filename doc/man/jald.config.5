.TH JALD.CONFIG 5
.SH NAME
.BR jald.config
- configuration file for
.BR jald (8)
.SH "DESCRIPTION"
This file is read by
.BR jald (8)
and specifies the configuration parameters
such as which network interface and port to listen on,
where to obtain the
.SM JALoP
schemas, and the location of the
.SM JALoP
database of records.
This file follows the format of the libconfig library, where each
configuration setting is in the form "key = value;".
Blank lines and lines starting with "#" are ignored.
String values must be enclosed in double quotes.
All numeric values must have the suffix 'L',
as in: "port = 1234L;".
.SH "CONFIGURATION KEYS"
.BR jald (8)
recognizes the following configuration options:
.TP
.B private_key
The path to a PEM formatted private key that
.BR jald (8)
will use for TLS negotiations.
.TP
.B public_cert
The path to a PEM formatted public certificate file that
.BR jald (8)
will use for TLS negotiations.
.TP
.B db_root
This identifies where
.BR jald (8)
should obtain/store all the records. This is optional and defaults to
.I /var/lib/jalop/db/
.
.TP
.B schemas_root
The full path to the
.SM JALoP
schemas. This is optional.
.TP
.B publisher_id
UUID used to identify this publisher
.TP
.B poll_time
Time in seconds between checks for new records when none are available
.TP
.B retry_interval
Time in seconds between attempts to reconnect to peers where the connection has closed.
The special value of -1 can be used to indicate that jald should not attempt reconnects.
.TP
.B network_timeout
Network timeout for each session, in minutes. Upon failure to send or receive
data in this time, a network outage is assumed and the session closes.
The special value of 0 implies no network timeout is enforced.
.TP
.B pid_file
File storing PID of jald when daemonized.
.TP
.B log_dir
Log directory of jald when daemonized.
.TP
.B digest_algorithms
A list of supported digest algorithms. These algorithms should be ordered by preference in a single double-quoted string with a space separating the algorithms.
Valid values are "sha256", "sha384", and "sha512"
.TP
.B enable_seccomp
seccomp will restrict the process to the defined system calls.
.TP
.B seccomp_debug
Enable debugging messages for seccomp
.TP
.B initial_seccomp_rules
System calls allowed in the setup phase only.
.TP
.B both_seccomp_rules
System calls allowed in all phases.
.TP
.B final_seccomp_rules
System calls allowed in the setup phase and while the process is running.
.TP
.B peers
A list of peer configurations indicating which operations and JAL record types specific remotes are allowed to perform.
.SH "PEER CONFIGURATIONS"
Each peer configuration is used to identify the roles (publisher or subscriber) and JALoP data types that one or more remote peers are allowed to perform and exchange.
Without any peer configurations,
.B jald
will reject connections from every
.SM JALoP
peer that tries to connect to it. The recognized keys are:
.TP
.B host
The hostname or IP address of the subscriber
.TP
.B port
The port to connect to
.TP
.B mode
The mode of JALoP operation
To run JALoP in Archive mode, use "archive" or "archival"
To run JALoP in Live mode, use "live"
.TP
.B digest_challenge
Array of digest challenge configuration settings ordered by descending priority
Valid values are "on" and "off"
.TP
.B record_types
Array of record types to be sent to the subscriber
Valid values are "audit", "log", and "journal"
.TP
.B cert_dir
Directory containing the CA certificate(s) to use for TLS negotiation
.PP
Peer configurations are additive.
That is to say,
if there are more than one peer configurations that reference a particular host,
the set of permissions is the union of all permissions granted by all configurations.
.SH EXAMPLES
.nf
# the path to the PEM formatted private key, used for TLS negotiation
private_key = "/etc/jald/cert_and_key";

# the path to the PEM formatted public cert, used for TLS negotiation
public_cert = "/etc/jald/cert";

# path to the root of the database (optional)
db_root = "/var/lib/jalop/db/";

# path to a directory containing the JALoP schemas (optional)
schemas_root = "/usr/share/jalop/schemas/";

# A list of supported digest algorithms. These algorithms should be ordered by preference in a single double-quoted string with a space separating the algorithms.
# Valid values are "sha256", "sha384", and "sha512"
digest_algorithms = "sha256";

# Enable application of seccomp rules
enable_seccomp = false;

# Enable debugging messages for seccomp
seccomp_debug = false;

# Array of seccomp rules active during the setup phase of jald
initial_seccomp_rules = ["prctl","access","arch_prctl","execve","getcwd","getrlimit","ioctl","lstat","set_tid_address","seccomp","statfs"]

# Array of seccomp rules active after the setup phase but before the main loop of jald
both_seccomp_rules = ["brk","close","fstat","lseek","mmap","mprotect","munmap","open","read","rt_sigaction","rt_sigprocmask","set_robust_list","stat","write"]

# Array of seccomp rules active during the main loop of jald
final_seccomp_rules = ["flock","setsockopt","getpid","clone","connect","exit","exit_group","fcntl","fdatasync","ftruncate","futex","getdents","getpeername","getsockname","getsockopt","gettid","madvise","nanosleep","openat","poll","pread64","pwrite64","recvfrom","rename","rt_sigreturn","sched_yield","sendto","socket"]

# List of peer configurations. This configuration indicates that the hosts with
# the IP addresses 127.0.0.1 and 192.168.1.5 are allowed to subscribe to
# journal and log records, but not audit records. The 2 remotes will not be
# allowed to publish records to jald
peers = ( {
	# The hostname or IP address of the subscriber
	host = "127.0.0.1";

	# The port to connect to
	port = 8080L;

	# The mode of JALoP operation
	# To run JALoP in Archive mode, use "archive" or "archival"
	# To run JALoP in Live mode, use "live"
	mode = "archive";

	# Array of digest challenge configuration settings ordered by descending priority
	# Valid values are "on" and "off"
	digest_challenge = ["on"];

	# Array of record types to be sent to the subscriber
	# Valid values are "audit", "log", and "journal"
	record_types = ["audit", "log", "journal"];

	# Directory containing the CA certificate(s) to use for TLS negotiation
	# cert_dir = "./test-input/TLS_Self_Signed";
	} );

.SH "SEE ALSO"
.BR jald (8),
.BR openssl (1)
